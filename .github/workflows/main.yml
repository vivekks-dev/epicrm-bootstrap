# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 853494791452.dkr.ecr.us-east-1.amazonaws.com
      
      # Recommended to match projdir and projname; using different names for testing only.
      - name: Init a project
        run: ./epicrmanage.py -v --projdir /tmp/projdir --projname myproj init

      - name: Pull the images
        run: ./epicrmanage.py -v --projdir /tmp/projdir docker-pull

      - name: generate-gateway-conf
        run: ./epicrmanage.py -v --projdir /tmp/projdir generate-gateway-conf

      - name: Run the containers except apidoc
        run: ./epicrmanage.py -v --projdir /tmp/projdir up

      - name: Bootstrap the system
        run: ./epicrmanage.py -v --projdir /tmp/projdir setup
      
      - name: Fill the DBs with test data
        run: ./epicrmanage.py -v --projdir /tmp/projdir filltestdb

      - name: Wait until the followers catch-up
        run: sleep 4

      - name: Run the API tests
        run: make -C test/apitest/ npm-install && make -C test/apitest/


      # Recommended to match projdir and projname; using different names for testing only.
      - name: Spawn the saasman instance
        run: ./epicrmanage.py -v --projdir /tmp/manprojdir --projname mymanproj --saasman-edition init && ./epicrmanage.py -v --projdir /tmp/manprojdir generate-gateway-conf && ./epicrmanage.py -v --projdir /tmp/manprojdir up && ./epicrmanage.py -v --projdir /tmp/manprojdir setup
      
      - name: Fill the saasman DBs with test data
        run: ./epicrmanage.py -v --projdir /tmp/manprojdir filltestdb

      - name: Wait until the followers catch-up
        run: sleep 4

      - name: Run the API tests for saasman
        run: make -C test/apitest/ test-saasman


# TODO
#      - name: Run the apidoc container
#        run: docker compose -p epicrm -f docker-compose.apidoc.yml up -d

# TODO See why this failes, saying "curl: (52) Empty reply from server",
# despite the previous step being successful
#
#      - name: Make sure the API documentation server works
#        run: curl localhost:3001|grep 'Epixel CRM OpenAPI sepcification' || exit 1

# XXX If adding an image push step here, make sure it is run for the main branch only.
